% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_aeme.R
\name{run_aeme}
\alias{run_aeme}
\title{Run aquatic model ensemble}
\usage{
run_aeme(
  aeme_data,
  model,
  return = TRUE,
  mod_ctrls = NULL,
  nlev = NULL,
  verbose = FALSE,
  debug = FALSE,
  timeout = 0,
  parallel = FALSE,
  ncores,
  check_output = FALSE,
  path = "."
)
}
\arguments{
\item{aeme_data}{aeme; data object.}

\item{model}{vector; of models to be used. Can be `dy_cd`, `glm_aed`,
`gotm_wet`.}

\item{return}{logical; return model output within an `aeme` object? Defaults
to TRUE.}

\item{mod_ctrls}{dataframe; of configuration loaded from
"mod_ctrls.csv".}

\item{nlev}{numeric; number of levels to return in model output. If NULL,
calculates number of levels based on lake depth as provided within the
hypsograph. If the lake is less thatn 3m deep, it outputs every 0.1m, else
if it is greater than 3m, it outputs every 0.33m. Defaults to NULL.}

\item{verbose}{logical; print model output to console. Defaults to FALSE.}

\item{debug}{logical; write debug log (Only DYRESM). Defaults to FALSE.}

\item{timeout}{timeout in seconds, ignored if 0.  This is a limit for the
    elapsed time running \code{command} in a separate process.   Fractions
    of seconds are ignored.}

\item{parallel}{logical; run models in parallel. Defaults to FALSE.}

\item{ncores}{integer; number of cores to use for parallelization. Defaults
to `min(c(detectCores() - 1, length(model)))`.}

\item{check_output}{logical; check model output after running? Defaults to
FALSE.}

\item{path}{filepath; where input files are located relative to `config`.}
}
\value{
Runs the model
}
\description{
Run aquatic model ensemble
}
\examples{
\dontrun{
tmpdir <- tempdir()
aeme_dir <- system.file("extdata/lake/", package = "AEME")
# Copy files from package into tempdir
file.copy(aeme_dir, tmpdir, recursive = TRUE)
path <- file.path(tmpdir, "lake")
aeme_data <- yaml_to_aeme(path = path, "aeme.yaml")
mod_ctrls <- read.csv(file.path(path, "model_controls.csv"))
inf_factor = c("glm_aed" = 1)
outf_factor = c("glm_aed" = 1)
model <- c("glm_aed")
build_ensemble(path = path, aeme_data = aeme_data, model = model,
               mod_ctrls = mod_ctrls, inf_factor = inf_factor, ext_elev = 5,
               use_bgc = TRUE)
run_aeme(aeme_data = aeme_data, model = model, verbose = TRUE, path = path,
          return = FALSE)
}
}
